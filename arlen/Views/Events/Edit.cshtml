@model arlen.Models.Event

@{
    ViewBag.Title = "Edit Event";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid py-3">
    <div class="row">
        <div class="col-md-9 mx-auto">
            <div class="card card-body">
                <h3 class="text-center mb-4">Редактировать мероприятие</h3>
                @Html.ValidationSummary(false)
                <fieldset>
                    @using (Html.BeginForm("Edit", "Events", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="returnURL" value="@ViewBag.returnURL" />
                        <div class="form-group">
                            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control", @id = "datetimefield" } })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Place, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.Place, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-12">
                                @Html.TextAreaFor(model => model.Content, new { @class = "ckeditor" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Images, htmlAttributes: new { @class = "control-label col-md-2" })
                            @try
                            {
                                <div class="col-md-12">
                                    <img src="@Model.Images" class="img-fluid" id="@Model.Images" />
                                    @Html.CheckBox("check_" + Model.Images, true, new { id = "check" + Model.Images, @class = "mycheck" })
                                </div>
                            }
                            catch { }
                            <div class="col-md-12">
                                @Html.Editor("Images", new { htmlAttributes = new { @class = "form-control", @type = "file", @multiple = "true" } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Files, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-12">
                                @{string[] file = new string[] { "", "" };
                                }
                                @{
                                    if (Model != null)
                                    {
                                        if (Model.Files != null)
                                        {
                                            file = Model.Files.Split('|');
                                        }
                                    }

                                }

                                @Html.TextBox("file_name", file[0], new { @class = "form-control input-lg", @placeholder = "Введите заголовок", @autofocus = true, @title = "Заголовок" })

                                @Html.Label("Ссылка")
                                @Html.TextBox("link", file[1], new { @class = "form-control input-lg", @placeholder = "Введите ссылку на файл", @autofocus = true, @title = "URL-адрес загрузки файла" })

                                @Html.Label("Загрузить файл")
                                @Html.Editor("download", new { htmlAttributes = new { @class = "form-control input-lg", @type = "file", @title = "Загрузить файл с компьютера" } })
                               
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-12">
                                <input class="btn btn-lg btn-block btn-login" value="Отправить" type="submit">
                            </div>
                        </div>
                                    }
                </fieldset>
            </div>
        </div>
    </div>
</div>

<script src="~/lib/ckeditor/ckeditor.js"></script>

<script src="~/lib/inputmask/inputmask.min.js"></script>
<script src="~/lib/inputmask/jquery.inputmask.min.js"></script>
<script src="~/lib/inputmask/inputmask.extensions.min.js"></script>
<script src="~/lib/inputmask/inputmask.date.extensions.min.js"></script>
<script src="~/lib/inputmask/inputmask.numeric.extensions.min.js"></script>

<script>
    $('#datetimefield').inputmask("datetime", {
        mask: "1-2-y h:s",
        placeholder: "dd-mm-yyyy hh:mm",
        leapday: "-02-29",
        separator: "-",
        alias: "dd-mm-yyyy"
    });
</script>